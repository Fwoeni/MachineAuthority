#civic_example = {
#	playable = {}								# AND trigger, no scope; use this to prevent the civic from being selectable by the player (UI)
#	potential = {}								# requirements list, see ../readme_requirements.txt
#	possible = {}								# requirements list, see ../readme_requirements.txt
#	pickable_at_start = yes / no				# default: yes
#	modification = yes / no						# default: yes, set to no to prevent adding or removing this after creation of the empire
#
#	random_weight = { base = 5 }				# scriptable weight for randomizing a civic; required, else the civic will not get assigned randomly
#												# Note: formula is "base + factor (default 1) * (result of modifiers)"
#												# So to make it not spawn, set base and factor to 0
#
#	modifier = {}								# modifier added to the country if the civic is selected and valid
#	can_build_ruler_ship = yes / no				# default: no
#	traits = { trait = ... }					# default: empty; trait set to enforce on the primary species. They cannot be removed, but more can be added if points/picks permit
#	has_secondary_species = {					# default: none; if present, will enable secondary species customization in empire designer and will create secondary species & pops at galaxy generation time (see empire_init_create_capital_secondary_pops)
#		traits = { trait = ... }					# default: empty; trait set to enforce on the secondary species. They cannot be removed, but more can be added if points/picks permit
#	}
#	is_origin = yes / no						# default: no, set to yes if civic should be treated as an Origin
#
#	swap_type = {								# triggered name, desc, custom desc and modifiers
#		name = ...
#		description = ...
#		trigger = {								# In empire creation / galaxy setup, this has no scope. During the game, when there are actual countries existing, it is set to country scope.
#			local_human_species_class = ..		# If you want to use country scope here, you must always check is_scope_valid first (see civic_devouring_swarm), or you will get errors or it won't work as intended.
#		}
#		modifier = {							# modifier that is applied to the country when triggers are evaluated as true
#			...
#		}
#	}
#	ai_playable = {}							# Similar to "playable", for AI
#}

civic_Galvanic_Processors = {
	description = "civic_Galvanic_Processors_effect"
	potential = { authority = { value = auth_machine_intelligence } }
	random_weight = { base = 5 }
	modifier = {
		planet_technician_energy_produces_add = 1
	}
}

civic_Megafabricator_Coodinaters = {
	description = "civic_Megafabricator_Coodinaters_effect"
	potential = { authority = { value = auth_machine_intelligence } }
	random_weight = { base = 5 }
	modifier = {
		megastructure_build_speed_mult = 0.5
		country_megastructure_build_cap_add = 1
	}
}

civic_Decryption_Consoles = {
	description = "civic_Decryption_Consoles_effect"
	potential = { authority = { value = auth_machine_intelligence } }
	random_weight = { base = 5 }
	modifier = {
		intel_encryption_add = 2
		intel_decryption_add = 2
	}
}

civic_Terra_Incognita_Mastery = {
	descrition = "civic_Terra_Incognita_Mastery_effect"
	potential = { authority = { value = auth_machine_intelligence } }
	random_weight = { base = 5 }
    modifier = {
		terraform_speed_mult = 0.25
		terraforming_cost_mult = -0.25
	}
}

civic_Nanobot_Fortification = {
	descrition = "civic_Nanobot_Fortification_effect"
	potential = { authority = { value = auth_machine_intelligence } }
	random_weight = { base = 5 }
    modifier = {	
		starbase_upgrade_speed_mult = 0.50
		starbase_upgrade_cost_mult = -0.25	
        shipclass_starbase_damage_mult = 0.25
		shipclass_starbase_hull_mult = 0.25
		starbase_shipyard_build_cost_mult = 0.25
		country_naval_cap_mult = -0.10
	}
}
